<?xml version="1.0"?>
<ps_doc title="PlatSoft Grape Manual" titlepage="no" tocpage="no" description="Developer's guide to using the PlatSoft Grape Framework">
<h1 id="sec-grape-user-mgmt">User Management</h1>
	<p>
		Users and user-related information is stored in the table <tname>grape.user</tname>. Users can belong to one or more access roles, stored in <tname>grape.access_path</tname>. The link-table for these are <tname>grape.user_role</tname>. To see a list of SQL functions that interacts with this tables, jump to <link id="sec-grape-user-functions">User related functions</link>.
</p>
<h2>Access Roles</h2>
<p>Grape comes built-in with the following assignable access roles:
	<ul>
		<li>admin</li>
		<li>pg_stat</li>
		<li>switch_user</li>
	</ul>
</p>
<p>
	Additionally:
	<ul>
		<li>If a user is logged in, they will always belong to the role "all".</li>
		<li>If a user is not authenticated, they will belong to the role "guest".</li>
	</ul>
</p>
<h3>Roles in roles</h3>
<p>
	Roles can belong to other roles. For example, if a child role <i>role2</i> belongs to a parent role <i>role1</i>, and a user belongs to <i>role2</i>, that user will automatically be included in <i>role1</i>. Multiple levels are supported.
</p>
<p>
	The SQL function grape.add_access_role_to_role can be used to add a role to a role. 
</p>

<h2>Creating initial users</h2>
<b><r>TODO</r></b>

</ps_doc>
