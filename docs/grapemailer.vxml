<?xml version="1.0"?>
<ps_doc title="Grapemailer" titlepage="no">
<h1>How to send emails from Grape in PostgreSQL</h1>
<h2>Setup</h2>
The following needs to be set up in order to send emails from within SQL functions:
<ol>
	<li><i>smtp</i> settings in config 
<code><![CDATA[smtp: {
	host: 'mail.platsoft.net',
	from: 'Merlot <merlot-live@platsoft.net>',
	secureConnection: true,
	port: 465,
	auth: {
		user: 'username',
		pass: 'password'
	}
}]]></code></li>
	<li><i>email_template_directory</i> in config containing templates, typically <i>__dirname + '/email_templates'</i></li>
</ol>
<h2>Send an email</h2>
Call <i>grape.send_email (to TEXT, template TEXT, data JSON, headers JSON) </i> to send an email. The values of the parameters should be as follows:
<ul>
	<li><i>to</i> Email address of receiver</li>
	<li><i>template</i> Template name (see <b>Email templates</b> below)</li>
	<li><i>data</i> Template data</li>
	<li><i>headers</i> Optional - this is an array of additional headers to include in the email. For example: <icode>{'X-Key1': 'value', 'X-Key2': 'value'}</icode></li>
</ul>

<h2>Custom headers</h2>
<p>
Commonly used custom headers: <ul>
	<li><b>From:</b> Change the From field</li>
	<li><b>Reply-To:</b> Reply To field</li>
</ul>
</p>

<h2>Email templates</h2>
<p>
Email templates live in the <i>email_template_directory</i> defined in the app's config. Each template has 4 files (each starting with the specified <i>templatename</i>):
<ul>
	<li><i>templatename<b>.subject</b></i> - To generate the subject</li>
	<li><i>templatename<b>.text</b></i> - To generate the plain-text body of the email</li>
	<li><i>templatename<b>.html</b></i> - To generate the HTML body of the email</li>
	<li><i>templatename<b>.attachments</b></i> - To generate a list of attachments to include in the email</li>
</ul>

Underscore's template engine is used.

The data sent to <i>grape.send_email (to, template, data) </i> is accessible inside the template files. For example, if an email is called with the following data:
<code>{ "firstname": "Piet" }</code>

The field firstname is accessable inside of the templates using <icode><![CDATA[ <%= firstname %> ]]> </icode>
</p>

<pb />
<h2>Example</h2>
<p>
	A typical welcome email will have the following templates (assuming the template name is <red>welcome</red>): <br />
	<b><fname>welcome.subject</fname></b>:
	<code><![CDATA[Hi <%= firstname %>! Welcome to <%= product_name %>]]></code>
	<b><fname>welcome.text</fname></b>:
	<code><![CDATA[Hi <%= firstname %>! 
		Welcome to <%= product_name %>. 
		
		Your login details are as follows:
		Username: <%= username %>
		Password: <%= password %>

		Goodbye]]></code>

	The HTML file is optional, and follows the same pattern. 
	<br />
	This template must be called with a JSON object containing at least fields <i>firstname</i>, <i>product_name</i>, <i>username</i> and <i>password</i>. The send this email, call the grape.send_email function:
	<code>SELECT grape.send_email('piet@platsoft.net', 'welcome', <br />'{"firstname": "Piet", <br />"product_name": "Some System", <br />"username": "Piet", <br />"password": "Piet123"}'::JSON);</code>
</p>

</ps_doc>
