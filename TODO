
- Make roles be able to belong to roles
- Register all API calls in DB table
- Create API calls for stuff that is not JS files or DB functions (like PHP or python)
- New role 'sysadmin' used for configuration of system settings
- Settings management:
	- Store all settings in DB
	- Add setting access roles
	- Add setting categories
	- Make available in node upon startup
	- Consolidate DB settings and Config file settings
	- Validation settings
- Implemented API calls in PHP/Python 
- Email attachments
- Log username in logfiles
- SAML Integration
- API logger (partitioned tables monthly? or write session logs to a file)
	- settings: 
- Patch tables
- HTTP DIGEST authentication
- Theme manager
- Email queuer
- Check permissions in javascript (keep a synced permissions list from DB to check against) notifications are done here
- Static data loader keeping cache of users and sessions
- Run a grape app without a database
- create an authentication provider
- API call to get table information (part of table_operations.sql)
- Socket.IO integration
- Enterprise mobility management (EMM)


Modules to write:
- Shopping cart module
- WebDAV
	- Document store to Integrate with WebDAV
- SSDP module (Broadcast/discover other grape services (using SSDP))
- Expose API calls in SOAP 


Done:
- create API calls from JSON schema
- send email via API call
- pdf generator: pass xsl parameters to the pdfgenerator
- accept HTTP authentication instead of X-SessionID (look at Authorization header)
- Loading roles from schema
- System/Frontend integrator - HTTP server that relays api calls to connected systems. HTTP requests (API calls and HTML downloads etc) can be rewritten on the fly. /cabsav/...
- compiled javascript needs to be cached
- Send system notifications through HTTP headers
- Send SMSes
- Two-factor authentication
- Define all API calls in JSON schema - call JS file from it

